package projeto.maispop.usuario;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import projeto.maispop.excecoes.EntradaException;

public class PostagemFormat {
	
	public static PostagemFormat instancia;
	
	private PostagemFormat() {
		
	}
	
	public static PostagemFormat getInstancia() {
		if (instancia == null) {
			instancia = new PostagemFormat();
		}
		
		return instancia;
	}

	public static String getHashTag(String texto) throws EntradaException {
		if (!(texto.contains("#"))) {
			return "";
		}

		texto = texto.substring(texto.indexOf("#"), texto.length());
		String[] hashTags = texto.split(" ");
		for (String palavra : hashTags) {
			if (!(palavra.contains("#"))) {
				throw new EntradaException("Erro na hashtag: '" + palavra
						+ "'.");
			}
		}
		return texto;
	}

	public static String formatHashTag(String hashtag) {
		return hashtag.replace(" ", ",");
	}

	public static void formatMidia(List<String> midias) {
		for (String midia : midias) {
			midia.replace("<audio>", "$arquivo_audio: ");
			midia.replace("</audio>", "");

			midia.replace("<imagem>", "$arquivo_imagem: ");
			midia.replace("</imagem>", "");
		}
	}

	public static List<String> getMidia(String texto) {
		String marcacao = "";
		texto = texto.replace(">", "> ");
		texto = texto.replace("<", " <");

		String[] textoSplit = texto.split(" ");
		List<String> midia = new ArrayList<>();
		String caminhoMidia = "$arquivo_";

		boolean adicionaPalavra = false;
		for (String palavra : textoSplit) {
			if (palavra.equals(""))
				continue;// .split() nao remove todos os espacacos.

			if (palavra.equals("<audio>") || palavra.equals("<imagem>")) {
				caminhoMidia = caminhoMidia
						+ palavra.substring(1, palavra.length() - 1) + ":";
				marcacao = palavra;

				adicionaPalavra = true;
				continue;
			}

			if (palavra.equals(marcacao.replace("<", "</"))) {
				midia.add(caminhoMidia);
				caminhoMidia = "$arquivo_";

				adicionaPalavra = false;
				continue;
			}

			if (adicionaPalavra) {
				caminhoMidia = caminhoMidia + palavra;
			}
		}
		return midia;
	}

	public static String getMensagem(String texto) {

		int indexAudio = texto.indexOf("<audio>");
		texto = indexAudio == -1 ? texto : texto.substring(0, indexAudio);

		int indexImagem = texto.indexOf("<imagem>");
		texto = indexImagem == -1 ? texto : texto.substring(0, indexImagem);

		int indexHashTag = texto.indexOf("#");
		texto = indexHashTag == -1 ? texto : texto.substring(0, indexHashTag);

		return texto;
	}

	public static String getMensagemMidia(String texto) throws EntradaException {
		texto = texto.replace(getHashTag(texto), "");
		texto = texto.substring(0, texto.length() - 1);
		return texto;
	}

	public static String formatData(String dataPostagem) {
		DateTimeFormatter padrao = DateTimeFormatter
				.ofPattern("dd/MM/yyyy HH:mm:ss");
		DateTimeFormatter novoPadrao = DateTimeFormatter
				.ofPattern("yyyy-MM-dd HH:mm:ss");
		String novaData = LocalDateTime.parse(dataPostagem, padrao).format(
				novoPadrao);
		return novaData;
	}

}
