package projeto.maispop.usuario;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import projeto.maispop.excecoes.EntradaException;
import projeto.maispop.excecoes.ItemInexistenteException;

/**
 * Classe <code>MuralUsuario</code> representa a <i>linha do tempo</i> de um
 * usuario na rede social <i>+Pop<i>. Onde ele podera <i>postar</i> mensagens e
 * midias.
 * 
 * @author Adson Cesar.
 * @author Gerson Sales.
 * @version 0.3
 * @see Postagem
 *
 */
public class MuralUsuario {

    private Map<String, Set<Postagem>> mural;// Atributo ainda em desuso por nao
					     // se encaixar nas especificacoes
					     // do projeto.

    private List<Postagem> postagens;

    /**
     * Construtor da classe <code>MuralUsuario</code> tem como funcao inicialiar
     * a lista de postagens.
     */
    public MuralUsuario(String nomeUsuario) {
	this.mural = new HashMap<>();
	this.postagens = new ArrayList<>();
    }

    /**
     * Metodo <i>postar</i> responsavel por criar uma nova instancia de
     * <code>Postagem</code> e adiciona-la a lista de postagens.
     * 
     * @param texto
     *            . String recebida como parametro que representa o texto que
     *            contera a postagem
     * @param dataPostagem
     *            . String que representa a Data e Hora da postagem.
     * @throws EntradaException. Caso
     *             seja recebido alguma String(texto, DataPostagem) incorreta.
     */
    public void postar(String texto, String dataPostagem)
	    throws EntradaException {
	Postagem novaPostagem = new Postagem(texto, dataPostagem);
	this.postagens.add(novaPostagem);

	// if (this.mural.containsKey(novaPostagem.getHashTags())) {
	// this.mural.get(novaPostagem.getHashTags()).add(novaPostagem);
	// } else {
	// Set<Postagem> postagem = new HashSet<>();
	// postagem.add(novaPostagem);
	// this.mural.put(novaPostagem.getHashTags(), postagem);
	// }
	// //amigos.compartilhaNoticia(novaPostagem);
    }

    /**
     * Metodo <code>feedNoticias</code> responsavel por publicar no mural todas
     * as noticas de atividades dos amigos do usuario.
     * 
     * @param noticia
     *            <i>Postagem</i> publicacao que sera "importada" de um amigo.
     */
    public void feedNoticias(Postagem noticia) {
	this.mural.get(noticia.getHashTags()).add(noticia);

    }

    /**
     * Metodo <code>buscaPorHashTag</code> recebe como parametro um String
     * representando a hastag a ser pesquisada no historico do mural.
     * 
     * @param hashTag
     *            String que representa uma hashTag
     * @return Retorna uma conjunto de <i>Postagem</i>.
     */
    public String buscaPorHashTag(String hashTag) {
	String fdl = System.getProperty("line.separator");
	String postagens = "";
	for (String setHashTag : this.mural.keySet()) {
	    if (setHashTag.contains(hashTag)) {
		postagens = postagens + fdl + this.mural.get(setHashTag);
	    }

	}
	return postagens;
    }

    @Override
    public String toString() {
	String fdl = System.getProperty("line.separator");
	String publicacoes = "";
	for (Set<Postagem> publicacao : this.mural.values()) {
	    for (Postagem postagem : publicacao) {
		publicacoes = publicacoes + postagem + fdl;
	    }
	}
	return publicacoes + fdl;
    }

    public String getPostagem(int postagem) {
	return this.postagens.get(postagem).toString();
    }

    public String getPostagem(String atributo, int indice) {

	Postagem postagem = this.postagens.get(indice);
	switch (atributo) {
	case "Mensagem":
	    return postagem.getMensagem();
	case "Data":
	    return postagem.getData();
	case "Hashtags":
	    return postagem.getHashTags();
	default:
	    return "dafault";
	}
    }

    public String getConteudoPost(int indice, int postagem)
	    throws EntradaException, ItemInexistenteException {
	return this.postagens.get(postagem).getConteudo(indice);
    }

}
